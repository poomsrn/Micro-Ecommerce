- flash.each do |type, msg|
  .alert.alert-danger.alert-dismissible.fade.show{:style => "z-index: 99"}
    = msg
    %button.btn-close{"aria-label" => "Close", "data-bs-dismiss"=> "alert",:type => "button"}
.container.bg-light
  .row
    .col
      = simple_form_for(Rate.new, url:"/rate_store/#{@store_id}", method: :post) do |f|
        %button.btn.btn-outline-secondary.d-flex.justify-content-begin{"data-bs-target" => "#review#{@store_id}", "data-bs-toggle" => "modal", :type => "button"}
          review
        .modal.fade{id: "review#{@store_id}", "aria-hidden" => "true", :tabindex => "-1"}
          .modal-dialog
            .modal-content
              .modal-header
                %h5.modal-title review
                %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", :type => "button"}
              .modal-body
                .simple_form-inputs
                  .row
                    = f.input :rate_score, input_html: { min: '0', max: '5', step: '1' }
                  .row
                    = f.input :comment
              .modal-footer
                %button.btn.btn-secondary{"data-bs-dismiss" => "modal", :type => "button"} Close
                %input.btn.btn-outline-success{:type => "submit", :value => "send"}
    .col
      .d-flex.justify-content-end
        -if !FavouriteListHasStore.find_by(favourite_list_id: FavouriteList.find_by(user_id: @user_id), store_id: params[:id])
          = button_to("follow", "/add_favourite/#{@store_id}", method: "Post", class: "btn btn-success")
        -else
          = button_to("unfollow", "/unadd_favourite/#{@store_id}", method: "Delete", class: "btn btn-danger")
  .row
    .row.gx-3.d-flex.justify-content-center
      .card{:style => "width: 18rem;margin: 0.5rem;"}
        .card-body
          %h5.card-title Store name: #{@store.name}
          %p.card-text Address: #{@store.address}
          %ul.list-group.list-group-flush
            %li.list-group-item Since: #{@store.created_at.to_date}
            %li.list-group-item Score: #{@store.calculate_score(@store.id)}
        .card-body
    
  %hr
  .row.gx-3
    -@store.items.each do |item|
      .card{:style => "width: 18rem;margin: 0.5rem;padding: 0rem;"}
        %img.card-img-top
          -if item.avatar.attached?
            = image_tag(item.avatar)
        .card-body
          %h5.card-title #{item.name}
          %p.card-text description: #{item.description}
          %ul.list-group.list-group-flush
            %li.list-group-item price: #{item.price}
            %li.list-group-item quantity: #{item.quantity}
            %li.list-group-item tag: #{item.show_tag(item.id)}
        .card-body
          -@found = true
          -@add_to_cart = BucketHasItem.where(bucket_id: Bucket.find_by(user_id: @user_id)).find_by(item_id: item.id)
          -if @add_to_cart == nil
            -@found = false
            -@add_to_cart = BucketHasItem.new
          = simple_form_for(@add_to_cart, url:"/add_to_cart/#{item.id}", method: :post) do |f|
            -if item.quantity > 0
              %button.btn.btn-success.position-absolute.bottom-0.end-0{"data-bs-target" => "#item#{item.id}", "data-bs-toggle" => "modal", :type => "button",:style => "width: 2.5rem;"} +
            -else
              %button.btn.btn-success.position-absolute.bottom-0.end-0.disabled{"data-bs-target" => "#item#{item.id}", "data-bs-toggle" => "modal", :type => "button",:style => "width: 2.5rem;"} +
            .modal.fade{id: "item#{item.id}", "aria-hidden" => "true", :tabindex => "-1"}
              .modal-dialog
                .modal-content
                  .modal-header
                    %h5.modal-title add quantity
                    %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", :type => "button"}
                  .modal-body
                    .simple_form-inputs
                      -if @found == false
                        = f.input :quantity, input_html: { value: '0', min: '0', max: item.quantity, step: '1' }
                      -else
                        = f.input :quantity, input_html: { value: '0', min: '0', max: item.quantity-@add_to_cart.quantity, step: '1' }
                  .modal-footer
                    %button.btn.btn-secondary{"data-bs-dismiss" => "modal", :type => "button"} Close
                    %input.btn.btn-outline-success{:type => "submit", :value => "Update"}
          -if @found
            -@remove_from_cart = BucketHasItem.find_by(bucket_id: Bucket.find_by(user_id: @user_id),item_id: item.id)
            = simple_form_for(@remove_from_cart, url:"/remove_from_cart/#{item.id}", method: :post) do |f|
              %button.btn.btn-danger.position-absolute.bottom-0.start-0{"data-bs-target" => "#removeItem#{item.id}", "data-bs-toggle" => "modal", :type => "button",:style => "width: 2.5rem;"} -
              .modal.fade{id: "removeItem#{item.id}", "aria-hidden" => "true", :tabindex => "-1"}
                .modal-dialog
                  .modal-content
                    .modal-header
                      %h5.modal-title add quantity
                      %button.btn-close{"aria-label" => "Close", "data-bs-dismiss" => "modal", :type => "button"}
                    .modal-body
                      .simple_form-inputs
                        = f.input :quantity, input_html: { value: '0', min: '0', max: @remove_from_cart.quantity, step: '1' }
                    .modal-footer
                      %button.btn.btn-secondary{"data-bs-dismiss" => "modal", :type => "button"} Close
                      %input.btn.btn-outline-success{:type => "submit", :value => "Remove"}
          -else 
            %button.btn.btn-danger.position-absolute.bottom-0.start-0.disabled{:style => "width: 2.5rem;"} -
  %br
  %br
  %hr
  %h3 Review
  .row.gx-3
    -Rate.where(store_id: @store.id).each do |review|
      .card.text-center{:style => "width: 18rem;margin: 0.5rem;"}
        .card-header
          created by: #{User.find(review.user_id).name}
        .card-body
          %h5.card-title score: #{review.rate_score}
          %p.card-text comment: #{review.comment}
        .card-footer.text-muted
          #{review.created_at}